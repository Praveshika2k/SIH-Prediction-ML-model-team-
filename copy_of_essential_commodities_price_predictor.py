# -*- coding: utf-8 -*-
"""Copy of Essential Commodities Price Predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16Aa74VM-TozpgvQ5ddofq80qH9HZ-O4q
"""

import pandas as pd
import numpy as np
from statsmodels.tsa.arima.model import ARIMA
import warnings

pip install statsmodels

warnings.filterwarnings("ignore")

file_path ='/content/RS_Session_260_AU_1830_1.csv'
df = pd.read_csv(file_path)
print(df.head())
df.shape

if df.empty:
    raise ValueError("The dataset is empty. Please provide a valid dataset.")

df.fillna(np.nan, inplace=True)
df = df.dropna()

relevant_columns = ['Food Commodities', 'State/UT', '2018', '2019', '2020', '2021', '2022', '2023']
df = df[relevant_columns]

for year in ['2018', '2019', '2020', '2021', '2022', '2023']:
    df[year] = pd.to_numeric(df[year], errors='coerce')

def forecast_price(commodity, state_ut, forecast_year):

    commodity_data = df[(df['Food Commodities'] == commodity) & (df['State/UT'] == state_ut)]

    if commodity_data.empty:
        raise ValueError(f"No data available for commodity: {commodity} in {state_ut}.")

    price_data = commodity_data.iloc[0, 2:].values
    price_data = pd.to_numeric(price_data, errors='coerce')

    if np.isnan(price_data).any():
        raise ValueError("The price data contains invalid or NaN values. Cannot proceed with forecasting.")

    model = ARIMA(price_data, order=(1, 1, 1))
    fitted_model = model.fit()
    forecast_steps = forecast_year - 2023
    if forecast_steps <= 0:
        raise ValueError("The forecast year must be in the future.")

    forecast_result = fitted_model.forecast(steps=forecast_steps)
    forecast_price = forecast_result[-1]
    return forecast_price

commodity_name = input("Enter the name of the commodity (e.g., Annual Average Retail Prices of Rice): ")
state_ut_name = input("Enter the name of the state/UT (e.g., Andhra Pradesh): ")
year_to_predict = int(input("Enter the future year for prediction (2024 or later): "))

try:
    predicted_price = forecast_price(commodity_name, state_ut_name, year_to_predict)
    print(f"The predicted price for {commodity_name} in {state_ut_name} for the year {year_to_predict} is Rs.{predicted_price:.2f}/Kg.")
except ValueError as e:
    print(f"Error: {e}")